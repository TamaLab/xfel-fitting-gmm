#!/usr/bin/env python
from os.path import isfile,isdir
import AFM
import numpy as np
import yaml
import glob
import argparse
import sys
from scipy.stats.stats import pearsonr

def to_bool(value):
    valid = {'true': True, 't': True, '1': True,
             'false': False, 'f': False, '0': False,
             }
    if isinstance(value, bool):
        return value
    if not isinstance(value, basestring):
        raise ValueError('invalid literal for boolean. Not a string.')
    lower_value = value.lower()
    if lower_value in valid:
        return valid[lower_value]
    else:
        raise ValueError('invalid literal for boolean: "%s"' % value)

# Parse arguments
fmt_choices = ['map','mrc']
parser = argparse.ArgumentParser(description='Overlap between two 3D GMMs using Voxel data')
parser.add_argument("-f","--inputfile",dest="iFile",help="input file")
parser.add_argument("-o","--outoutfile",dest="oFile",help="output file")
parser.add_argument("-go","--origin",dest="origin",help="input origin",default="0:0:0")
parser.add_argument("-gr","--grid",dest="grid",help="input grid",default="100:100:100")
parser.add_argument("-gw","--gridWidth",dest="gw",help="input grid-width",default=4.0)
parser.add_argument("-fmt","--format",dest="fmt",help="output format",
                    default='map',const='map',nargs='?',choices=fmt_choices)

interactiveSession=False
try:
  __file__
except NameError:
  interactiveSession=True

if interactiveSession:
  print("This script can't be run interactively")
  sys.exit()
else:
  args = parser.parse_args()

origin = [float(s) for s in args.origin.split(':')]
grid = [int(g) for g in args.grid.split(':')]

gw = float(args.gw)

if isfile(args.iFile):  
  vox = AFM.Voxel(origin=origin)
  vox.setupVoxel(fromFile=True,filename=args.iFile)  
else:
  print("Input File1 %s not found" % args.iFile)
  sys.exit()

ng = vox.getNumGridbyGridWidth(gw=gw)
vox.setGridWidth(gw)
vox.setNumGrid(ng)
vox.createGrid(); vox.CalProbDensity();

vox.WriteMRC(args.oFile,format=args.fmt)
